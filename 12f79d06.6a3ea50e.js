(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{299:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/bttf-8fab125eb46d4eb42d95d7653a5e13e4.jpg"},68:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return j}));var n=a(2),b=a(6),l=(a(0),a(218)),r=a(225),c=a(226),i={title:"How to perform CRUD operations",sidebar_label:"CRUD operations",description:"Tutorial showing how to perform CRUD operations with QuestDB. This will help you understand QuestDB's data model."},o={unversionedId:"guide/crud",id:"guide/crud",isDocsHomePage:!1,title:"How to perform CRUD operations",description:"Tutorial showing how to perform CRUD operations with QuestDB. This will help you understand QuestDB's data model.",source:"@site/docs/guide/crud.md",slug:"/guide/crud",permalink:"/docs/guide/crud",version:"current",sidebar_label:"CRUD operations",sidebar:"docs",previous:{title:"How to use the QuestDB REST API",permalink:"/docs/guide/rest"},next:{title:"My first database",permalink:"/docs/guide/my-first-database"}},p=[{value:"(C)reate",id:"create",children:[]},{value:"(R)ead",id:"read",children:[]},{value:"(U)pdate",id:"update",children:[]},{value:"(D)elete",id:"delete",children:[]},{value:"Traveling through time",id:"traveling-through-time",children:[]}],s={rightToc:p};function j(e){var t=e.components,i=Object(b.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,i,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"QuestDB's data store is mostly meant to be immutable. While we plan to support\nout-of-order inserts from 4.3, the most efficient way to use QuestDB is as\n",Object(l.b)("inlineCode",{parentName:"p"},"append only"),"."),Object(l.b)("p",null,"We propose an efficient model to perform CRUD operations revolving around the\nuse of ",Object(l.b)("inlineCode",{parentName:"p"},"LATEST BY"),". This page describes each of CRUD operations\n(",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#create"}),"create"),", ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#read"}),"read"),", ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#update"}),"update"),", ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#delete"}),"delete"),") and how\nto implement them in an append-only scenario at high efficiency."),Object(l.b)("h2",{id:"create"},"(C)reate"),Object(l.b)("p",null,"The Create operation in QuestDB appends records to bottom of a table. If the\ntable has a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concept/designated-timestamp/"}),"designated timestamp"),", new\nrecord timestamps must be superior or equal to the latest timestamp. Attempts to\nadd a timestamp in middle of a table will result in a ",Object(l.b)("inlineCode",{parentName:"p"},"timestamp out of order"),"\nerror."),Object(l.b)("p",null,"If the table is ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concept/partitions/"}),"partitioned"),", then the ",Object(l.b)("inlineCode",{parentName:"p"},"timestamp"),"\nvalue determines which partition the record is appended to. In this case, only\nthe last partition can be appended to."),Object(l.b)("p",null,"When a table does not have a ",Object(l.b)("inlineCode",{parentName:"p"},"designated timestamp"),", records can be added in any\ntimestamp order and the table will only have one partition."),Object(l.b)("p",null,"Let's first create table that holds bank balances for customers."),Object(l.b)(r.a,{defaultValue:"sql",values:[{label:"SQL",value:"sql"},{label:"REST",value:"rest"},{label:"Java",value:"java"},{label:"JDBC",value:"jdbc"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"sql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"CREATE TABLE balances (\n    cust_id INT,\n    balance_ccy SYMBOL,\n    balance DOUBLE,\n    inactive BOOLEAN,\n    ts TIMESTAMP\n);\n}\n"))),Object(l.b)(c.a,{value:"rest",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'curl -G "http://localhost:13005/exec" --data-urlencode "query=\ncreate table balances (\n    cust_id int,\n    balance_ccy symbol,\n    balance double,\n    inactive boolean,\n    timestamp timestamp\n)"\n'))),Object(l.b)(c.a,{value:"java",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'final String cairoDatabaseRoot = "/tmp";\ntry (CairoEngine engine = new CairoEngine(\n    new DefaultCairoConfiguration(cairoDatabaseRoot))\n) {\n    try (SqlCompiler compiler = new SqlCompiler(engine)) {\n        compiler.compile("create table balances (\\n" +\n                "    cust_id int, \\n" +\n                "    balance_ccy symbol, \\n" +\n                "    balance double, \\n" +\n                "    inactive boolean, \\n" +\n                "    timestamp timestamp\\n" +\n                ")");\n    }\n}\n'))),Object(l.b)(c.a,{value:"jdbc",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'Properties properties = new Properties();\nproperties.setProperty("user", "admin");\nproperties.setProperty("password", "quest");\nproperties.setProperty("sslmode", "disable");\n\nfinal Connection connection =\n    DriverManager.getConnection("jdbc:postgresql://localhost:9120/qdb", properties);\nPreparedStatement statement = connection.prepareStatement(\n    "create table balances (" +\n    "    cust_id int," +\n    "    balance_ccy symbol," +\n    "    balance double," +\n    "    inactive boolean," +\n    "    timestamp timestamp" +\n    ")"\n);\nstatement.execute();\nconnection.close();\n')))),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"cust_id")," is the customer identifier. It uniquely identifies customer."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"balance_ccy")," balance currency. We use ",Object(l.b)("inlineCode",{parentName:"li"},"SYMBOL")," here to avoid storing text\nagainst each record to save space and increase database performance."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"balance")," is the current balance for customer and currency tuple."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"inactive")," is used to flag deleted records."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"timestamp")," timestamp in microseconds of the record. Note that if you receive\nthe timestamp data as a string, it could also be inserted using\n",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/function/date-time/#to_timestamp"}),"to_timestamp"),".")),Object(l.b)("p",null,"Let's now insert a few records:"),Object(l.b)(r.a,{defaultValue:"sql",values:[{label:"SQL",value:"sql"},{label:"REST",value:"rest"},{label:"Java",value:"java"},{label:"JDBC",value:"jdbc"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"sql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"INSERT INTO balances (cust_id, balance_ccy, balance, timestamp)\nVALUES (1, 'USD', 1500.00, 1587571882704665);\n\nINSERT INTO balances (cust_id, balance_ccy, balance, timestamp)\nVALUES (1, 'EUR', 650.50, 1587571892904234);\n\nINSERT INTO balances (cust_id, balance_ccy, balance, timestamp)\nVALUES (2, 'USD', 900.75, 1587571963504432);\n\nINSERT INTO balances (cust_id, balance_ccy, balance, timestamp)\nVALUES (2, 'EUR', 880.20, 1587572314404665);\n}\n"))),Object(l.b)(c.a,{value:"rest",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'curl -G "http://localhost:13005/exec" --data-urlencode "query=\ninsert into balances (cust_id, balance_ccy, balance, timestamp)\n    values (1, \'USD\', 1500.00, 1587571882704665)\n'))),Object(l.b)(c.a,{value:"java",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'CairoConfiguration configuration = new DefaultCairoConfiguration(".");\ntry (CairoEngine engine = new CairoEngine(configuration)) {\n    try (TableWriter writer = engine.getWriter(AllowAllCairoSecurityContext.INSTANCE, "balances")) {\n        TableWriter.Row r;\n\n        r = writer.newRow(1587571882704665); // timestamp\n        r.putInt(0, 1); // cust_id\n        r.putSym(1, "USD"); // symbol\n        r.putDouble(2, 1500.00); // balance\n        r.append();\n\n        r = writer.newRow(1587571892904234); // timestamp\n        r.putInt(0, 1); // cust_id\n        r.putSym(1, "EUR"); // symbol\n        r.putDouble(2, 650.5); // balance\n        r.append();\n\n        r = writer.newRow(1587571963504432); // timestamp\n        r.putInt(0, 2); // cust_id\n        r.putSym(1, "USD"); // symbol\n        r.putDouble(2, 900.75); // balance\n        r.append();\n\n        r = writer.newRow(1587572314404665); // timestamp\n        r.putInt(0, 2); // cust_id\n        r.putSym(1, "USD"); // symbol\n        r.putDouble(2, 880.2); // balance\n        r.append();\n\n        writer.commit();\n    }\n}\n'))),Object(l.b)(c.a,{value:"jdbc",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'Properties properties = new Properties();\nproperties.setProperty("user", "admin");\nproperties.setProperty("password", "quest");\nproperties.setProperty("sslmode", "disable");\n\nfinal Connection connection =\n    DriverManager.getConnection("jdbc:postgresql://localhost:9120/qdb", properties);\nPreparedStatement insert = connection.prepareStatement(\n    "insert into balances (cust_id, balance_ccy, balance, timestamp)"+\n        "values (?, ?, ?, ?)";\n\n)\ninsert.setInt(1, 1);\ninsert.setString(2, "USD");\ninsert.setDouble(3, 1500);\ninsert.setLong(4, 1587571882704665);\n\ninsert.execute();\nconnection.close();\n\n')))),Object(l.b)("p",null,"Our resulting table looks like the following."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1500"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:22.704665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"650.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:32.904234Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"900.75"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:12:43.504432Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"880.2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:18:34.404665Z")))),Object(l.b)("h2",{id:"read"},"(R)ead"),Object(l.b)("p",null,"Reading records can be done using ",Object(l.b)("inlineCode",{parentName:"p"},"SELECT")," or by reading a table directly via\nthe Java API. Reading via the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/java/"}),"Java API")," (see tab ",Object(l.b)("inlineCode",{parentName:"p"},"Java Raw"),")\niterates over a table and can therefore only access one table at a time. If you\nwould like to query various tables via the Java API, you can pass SQL to Java\nand read the resulting table (see tab ",Object(l.b)("inlineCode",{parentName:"p"},"Java SQL"),")."),Object(l.b)(r.a,{defaultValue:"sql",values:[{label:"SQL",value:"sql"},{label:"REST",value:"rest"},{label:"Java with SQL",value:"javasql"},{label:"Java RAW",value:"javaraw"},{label:"JDBC",value:"jdbc"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"sql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"balances;\n"))),Object(l.b)(c.a,{value:"rest",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'curl -G "http://localhost:9000/exec" \\\n--data-urlencode "query=select * from balances"\n'))),Object(l.b)(c.a,{value:"javasql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'final String cairoDatabaseRoot = "/tmp";\nCairoConfiguration configuration = new DefaultCairoConfiguration(cairoDatabaseRoot);\ntry (CairoEngine engine = new CairoEngine(configuration)) {\n    try (SqlCompiler compiler = new SqlCompiler(engine)) {\n        try (RecordCursorFactory factory = compiler.compile("select * from balances").getRecordCursorFactory()) {\n\n            try (RecordCursor cursor = factory.getCursor()) {\n                final Record record = cursor.getRecord();\n                while (cursor.hasNext()) {\n                    record.getInt(0); // cust_id\n                    record.getSym(1); // symbol\n                    record.getDouble(2); // balance\n                    record.getByte(3); // status\n                    record.getTimestamp(4); // timestamp\n                }\n            }\n        }\n    }\n}\n'))),Object(l.b)(c.a,{value:"javaraw",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'CairoConfiguration configuration = new DefaultCairoConfiguration(".");\ntry (CairoEngine engine = new CairoEngine(configuration)) {\n    try (TableReader reader = engine.getReader(AllowAllCairoSecurityContext.INSTANCE, "balances")) {\n        // closing this cursor will close reader too\n        // lets close reader explicitly\n        final TableReaderRecordCursor cursor = reader.getCursor();\n        final Record record = cursor.getRecord();\n        while (cursor.hasNext()) {\n            record.getInt(0); // cust_id\n            record.getSym(1); // symbol\n            record.getDouble(2); // balance\n            record.getByte(3); // status\n            record.getTimestamp(4); // timestamp\n        }\n    }\n}\n'))),Object(l.b)(c.a,{value:"jdbc",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'Properties properties = new Properties();\nproperties.setProperty("user", "admin");\nproperties.setProperty("password", "quest");\nproperties.setProperty("sslmode", "disable");\n\nfinal Connection connection =\n        DriverManager.getConnection("jdbc:postgresql://localhost:8812/qdb", properties);\nPreparedStatement statement = connection.prepareStatement("select * from balances");\n\nResultSet resultSet = statement.executeQuery();\n\nwhile (resultSet.next()) {\n    System.out.println(resultSet.getInt(1)); // cust_id\n    System.out.println(resultSet.getString(2)); // symbol\n    System.out.println(resultSet.getDouble(3)); // balance\n    System.out.println(resultSet.getByte(4)); // status\n    System.out.println(resultSet.getTimestamp(5)); // timestamp\n}\nconnection.close();\n')))),Object(l.b)("p",null,"The results are shown below"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1500"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:22.704665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"650.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:32.904234Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"900.75"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:12:43.504432Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"880.2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:18:34.404665Z")))),Object(l.b)("p",null,"You can use ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/function/aggregation/"}),"aggregation functions")," to\nderive information like the average balance per currency (note the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concept/sql-extensions/#absence-of-group-by"}),"voluntary omission of redundant GROUP BY"),"\nbelow)."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT balance_ccy, avg(balance) FROM balances;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"avg"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1200.375")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"765.35")))),Object(l.b)("p",null,"If we had more data we could get deeper and use\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/sql/select/#sample-by"}),"SAMPLE BY")," clauses to easily generate\naggregates based on time intervals. For example, to get the average hourly\nbalance per currency, all we need is to add ",Object(l.b)("inlineCode",{parentName:"p"},"SAMPLE BY 1h")," to the above query!"),Object(l.b)("h2",{id:"update"},"(U)pdate"),Object(l.b)("p",null,"Lets update balance of customer ",Object(l.b)("inlineCode",{parentName:"p"},"1")," in the ",Object(l.b)("inlineCode",{parentName:"p"},"balances")," table:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"INSERT INTO balances (cust_id, balance_ccy, balance, timestamp)\nVALUES (1, 'USD', 330.50, 1587572414404997);\n")),Object(l.b)("p",null,"After this step, our table looks like this"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1500"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:22.704665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"650.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:32.904234Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"900.75"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:12:43.504432Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"880.2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:18:34.404665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"1")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"USD")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"330.5")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"FALSE")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"2020-04-22T16:20:14.404997Z"))))),Object(l.b)("p",null,"You might expect an ",Object(l.b)("inlineCode",{parentName:"p"},"UPDATE"),". QuestDB uses ",Object(l.b)("inlineCode",{parentName:"p"},"INSERT")," which means each table keeps\nchange history. In order to select only the latest value, our ",Object(l.b)("inlineCode",{parentName:"p"},"SELECT")," statement\nwill have to change. We use ",Object(l.b)("inlineCode",{parentName:"p"},"LATEST BY")," to only select last row for the\n",Object(l.b)("inlineCode",{parentName:"p"},"(1,USD)")," tuple for customer 1 and find the updated USD balance."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT * FROM balances\nLATEST BY cust_id, balance_ccy\nWHERE cust_id = 1;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"650.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:32.904234Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"330.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:20:14.404997Z")))),Object(l.b)("p",null,"In the above example QuestDB will execute the ",Object(l.b)("inlineCode",{parentName:"p"},"where")," clause ",Object(l.b)("em",{parentName:"p"},"before"),"\n",Object(l.b)("inlineCode",{parentName:"p"},"latest by"),". To execute ",Object(l.b)("inlineCode",{parentName:"p"},"where")," ",Object(l.b)("em",{parentName:"p"},"after")," ",Object(l.b)("inlineCode",{parentName:"p"},"latest by")," we have to rely on\nsub-queries. To find out more, check out our\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concept/sql-execution-order/"}),"SQL execution order")," Here is an example of\nhow to select the latest account information, only for balances over 800."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"(SELECT * FROM balances\nLATEST BY cust_id, balance_ccy)\nWHERE balance > 800;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1500"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:22.704665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"900.75"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:12:43.504432Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"880.2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:18:34.404665Z")))),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"With ",Object(l.b)("inlineCode",{parentName:"p"},"latest by"),", QuestDB will search time series from most recent values to\noldest. For single ",Object(l.b)("inlineCode",{parentName:"p"},"SYMBOL")," columns, QuestDB will know all distinct values\nupfront. Time series scan will end as soon as all values are matched. For all\nother field types, or multiple fields QuestDB will scan entire time series.\nAlthough scan is very fast you should be aware that in certain setups,\nperformance will degrade on hundreds of millions of records."))),Object(l.b)("h2",{id:"delete"},"(D)elete"),Object(l.b)("p",null,"Let's assume that ",Object(l.b)("inlineCode",{parentName:"p"},"customer 1")," closes their ",Object(l.b)("inlineCode",{parentName:"p"},"USD")," account but keeps their ",Object(l.b)("inlineCode",{parentName:"p"},"EUR"),"\naccount. This can be reflected in the database as follows."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"INSERT INTO balances\n(cust_id, balance_ccy, inactive, timestamp)\nVALUES (1, 'USD', true, 1587572423312698));\n")),Object(l.b)("p",null,"Notice that this sets tue ",Object(l.b)("inlineCode",{parentName:"p"},"inactive")," boolean flag to ",Object(l.b)("inlineCode",{parentName:"p"},"true")," for this balance. At\nthis point, the ",Object(l.b)("inlineCode",{parentName:"p"},"balances")," table looks like the below"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1500"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:22.704665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"650.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:32.904234Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"900.75"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:12:43.504432Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"880.2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:18:34.404665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"330.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:20:14.404997Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"1")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"USD")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"null")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"TRUE")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"2020-04-22T16:20:23.312698Z"))))),Object(l.b)("p",null,"If we now want to look at the active account balances for ",Object(l.b)("inlineCode",{parentName:"p"},"customer 1")," we can do\nso as follows:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"(SELECT * FROM balances\nLATEST BY balance_ccy\nWHERE cust_id=1)\nWHERE NOT inactive;\n")),Object(l.b)("p",null,"The results will exclude deleted records (the USD balance) and only show the\nlatest EUR balance for this customer."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"650.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:32.904234Z")))),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"The above SQL example uses brackets. This is because our\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/concept/sql-execution-order/"}),"SQL execution order")," will execute WHERE\nclauses before LATEST BY. By encapsulating the query and applying\n",Object(l.b)("inlineCode",{parentName:"p"},"where not inactive")," to the whole result set, we are able to easily remove the\ninactive accounts."))),Object(l.b)("p",null,'In other words, the brackets allow us to get "the latest balance excluding\ninactive". If we were to remove the brackets and use the following query, we\nwould get "the latest non inactive balance" which is slightly different.'),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT * FROM balances\nLATEST BY balance_ccy\nWHERE cust_id=1\nAND NOT inactive;\n")),Object(l.b)("p",null,"and returns different results (not what we are looking for!). See below."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1500"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:22.704665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"650.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:32.904234Z")))),Object(l.b)("h2",{id:"traveling-through-time"},"Traveling through time"),Object(l.b)("p",null,"This approach to CRUD operations may be unusual for traditional database users.\nA major advantage of this approach is a superior write and seek speed over\ntraditional relational models along with contiguous storage. Moreover, it\nremoves the need to maintain separated master and audit tables."),Object(l.b)("p",null,"There is another nice advantage. By keeping all change history and leveraging\nQuestDB's seek speed, you can trivially travel through time at incredible speed\nand reproduce the state of the database at any point in time. You can use this\nto restore a previous state, or to produce snapshots. Welcome to the world of\nfast time travel!"),Object(l.b)("p",null,Object(l.b)("img",{alt:"Cartoon reproduction of the film Back to the Future Part II",src:a(299).default})),Object(l.b)("p",null,"For example the below query can be used to know the state of all balances at a\n",Object(l.b)("inlineCode",{parentName:"p"},"15:00:00")," snapshot."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT * FROM balances\nLATEST BY balance_ccy, cust_id\nWHERE timestamp <= '2020-04-22T16:15:00.000Z'\nAND NOT inactive;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cust_id"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance_ccy"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"balance"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"inactive"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1500"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:22.704665Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"EUR"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"650.5"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:11:32.904234Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"900.75"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FALSE"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2020-04-22T16:12:43.504432Z")))),Object(l.b)("p",null,"What's great about this is that instead of scanning the whole table, QuestDB is\ncapable of very efficiently locating the point in time requested and pull the\nrelevant data. It can perform just as efficiently for any timestamp, from a few\nhundred to billions of rows!"))}j.isMDXComponent=!0}}]);