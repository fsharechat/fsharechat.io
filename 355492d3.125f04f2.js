(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{104:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return r})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(2),b=a(6),i=(a(0),a(218)),l={title:"JOIN keyword",sidebar_label:"JOIN",description:"JOIN SQL keyword reference documentation."},r={unversionedId:"reference/sql/join",id:"reference/sql/join",isDocsHomePage:!1,title:"JOIN keyword",description:"JOIN SQL keyword reference documentation.",source:"@site/docs/reference/sql/join.md",slug:"/reference/sql/join",permalink:"/docs/reference/sql/join",version:"current",sidebar_label:"JOIN",sidebar:"docs",previous:{title:"INSERT keyword",permalink:"/docs/reference/sql/insert"},next:{title:"LATEST BY keyword",permalink:"/docs/reference/sql/latest-by"}},c=[{value:"Join syntax",id:"join-syntax",children:[]},{value:"(INNER) JOIN",id:"inner-join",children:[{value:"Overview",id:"overview",children:[]},{value:"Examples",id:"examples",children:[]}]},{value:"OUTER JOIN",id:"outer-join",children:[{value:"Overview",id:"overview-1",children:[]},{value:"Examples",id:"examples-1",children:[]}]},{value:"CROSS JOIN",id:"cross-join",children:[{value:"Overview",id:"overview-2",children:[]},{value:"EXAMPLE",id:"example",children:[]}]},{value:"ASOF JOIN",id:"asof-join",children:[{value:"Overview",id:"overview-3",children:[]},{value:"Example",id:"example-1",children:[]}]},{value:"SPLICE JOIN",id:"splice-join",children:[{value:"Overview",id:"overview-4",children:[]},{value:"Examples",id:"examples-2",children:[]}]}],o={rightToc:c};function s(e){var t=e.components,l=Object(b.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},o,l,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"QuestDB supports the following types of joins: ",Object(i.b)("inlineCode",{parentName:"p"},"INNER"),", ",Object(i.b)("inlineCode",{parentName:"p"},"OUTER"),", ",Object(i.b)("inlineCode",{parentName:"p"},"CROSS"),", ",Object(i.b)("inlineCode",{parentName:"p"},"ASOF"),"\nand ",Object(i.b)("inlineCode",{parentName:"p"},"SPLICE"),". ",Object(i.b)("inlineCode",{parentName:"p"},"FULL")," joins are not yet implemented and are on our roadmap. All\nsupported join types can be combined in a single SQL statement; QuestDB SQL's\noptimiser determines the best execution order and algorithms."),Object(i.b)("p",null,"There are no known limitations on size of tables or sub-queries participating in\njoins and there are no limitations on number of joins either."),Object(i.b)("h2",{id:"join-syntax"},"Join syntax"),Object(i.b)("p",null,Object(i.b)("img",{alt:"Flow chart showing the syntax of the JOIN keyword",src:a(262).default})),Object(i.b)("p",null,"Following data join columns from joined tables are combined in single row. Same\nname columns originating from different tables will be automatically aliased to\ncreate unique column namespace of the result set."),Object(i.b)("p",null,"Though it is a best practice to diligently specify join conditions, QuestDB will\nalso analyse ",Object(i.b)("inlineCode",{parentName:"p"},"WHERE")," clause for implicit join condition and will derive\ntransient join conditions where necessary."),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"When tables are joined on column that has the same name in both tables you can\nuse shorthand ",Object(i.b)("inlineCode",{parentName:"p"},"ON (column)")," clause"))),Object(i.b)("h2",{id:"inner-join"},"(INNER) JOIN"),Object(i.b)("h3",{id:"overview"},"Overview"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"(INNER) JOIN")," is used to return rows from 2 tables where the records on the\ncompared column have matching values in both tables"),Object(i.b)("h3",{id:"examples"},"Examples"),Object(i.b)("p",null,"The following query will return the movieId and the average rating from table\n",Object(i.b)("inlineCode",{parentName:"p"},"ratings"),". It will also add a column for the ",Object(i.b)("inlineCode",{parentName:"p"},"title")," from table ",Object(i.b)("inlineCode",{parentName:"p"},"movies"),". The\ncorresponding title will be identified based on the ",Object(i.b)("inlineCode",{parentName:"p"},"movieId")," in the ",Object(i.b)("inlineCode",{parentName:"p"},"ratings"),"\ntable matching an ",Object(i.b)("inlineCode",{parentName:"p"},"id")," in the ",Object(i.b)("inlineCode",{parentName:"p"},"movies")," table."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="INNER JOIN ON"',title:'"INNER',JOIN:!0,'ON"':!0}),"SELECT movieId a, title, avg(rating)\nFROM ratings\nINNER JOIN (select movieId id, title from movies)\nON ratings.movieId = id;\n")),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"By default ",Object(i.b)("inlineCode",{parentName:"p"},"JOIN")," is interpreted as ",Object(i.b)("inlineCode",{parentName:"p"},"INNER JOIN"),". Therefore ",Object(i.b)("inlineCode",{parentName:"p"},"INNER")," can be\ndropped."))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Dropping INNER"',title:'"Dropping','INNER"':!0}),"SELECT movieId a, title, avg(rating)\nFROM ratings\nJOIN (select movieId id, title from movies)\nON ratings.movieId = id;\n")),Object(i.b)("h2",{id:"outer-join"},"OUTER JOIN"),Object(i.b)("h3",{id:"overview-1"},"Overview"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"OUTER JOIN")," will return ",Object(i.b)("strong",{parentName:"p"},"all")," records from the LEFT table, and if matched,\nthe records of the RIGHT table. When there is no match for the RIGHT table, it\nwill return ",Object(i.b)("inlineCode",{parentName:"p"},"NULL")," values in right table fields"),Object(i.b)("h3",{id:"examples-1"},"Examples"),Object(i.b)("p",null,"General syntax is as follows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT tab1.colA, tab2.colB\nFROM table1 tab1\nOUTER JOIN table2 tab2\nON tab1.colA = tab2.colB;\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"OUTER JOIN")," query can also be used to select all rows in left table that do not\nexist in right table."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT tab1.colA, tab2.colB\nFROM table1 tab1\nOUTER JOIN table2 tab2\nON tab1.colA = tab2.colB\nWHERE tab2.colB = NULL\n")),Object(i.b)("h2",{id:"cross-join"},"CROSS JOIN"),Object(i.b)("h3",{id:"overview-2"},"Overview"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"CROSS JOIN")," will return the cartesian product of the two tables being joined.\nIt can be used to a table with all possible combinations."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},Object(i.b)("inlineCode",{parentName:"p"},"CROSS JOIN")," does not have ",Object(i.b)("inlineCode",{parentName:"p"},"ON")," clause."))),Object(i.b)("h3",{id:"example"},"EXAMPLE"),Object(i.b)("p",null,"The following will return all possible combinations of starters and deserts"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT * FROM starters CROSS JOIN deserts;\n")),Object(i.b)("h2",{id:"asof-join"},"ASOF JOIN"),Object(i.b)("h3",{id:"overview-3"},"Overview"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"ASOF")," joins are used on time series data to join two tables based on timestamp\nwhere timestamps do not exactly match. For a given record at a given timestamp,\nit will return the corresponding record in the other table at the closest\ntimestamp ",Object(i.b)("strong",{parentName:"p"},"prior to")," the timestamp in the first table."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"To be able to leverage ",Object(i.b)("inlineCode",{parentName:"p"},"ASOF JOIN"),", both joined table must have a designated\n",Object(i.b)("inlineCode",{parentName:"p"},"timestamp")," column. To designate a column as ",Object(i.b)("inlineCode",{parentName:"p"},"timestamp"),", please refer to the\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/sql/create-table/"}),"CREATE TABLE")," section."))),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"ASOF")," join is performed on tables or result sets that are ordered by time. When\ntable is created as ordered by time order of records is enforced and timestamp\ncolumn name is in table metadata. ",Object(i.b)("inlineCode",{parentName:"p"},"ASOF")," join will use timestamp column from\nmetadata."),Object(i.b)("h3",{id:"example-1"},"Example"),Object(i.b)("p",null,"Consider the following tables."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"ts"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"ask"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.000000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.200000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"101")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.400000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"102")))),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"ts"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"bid"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.100000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"101")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.300000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"102")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.500000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"103")))),Object(i.b)("p",null,"Therefore the following query:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT\n bids.ts timebid,\n bid,\n ask\nFROM bids ASOF JOIN asks\n")),Object(i.b)("p",null,"Will return the following"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"timebid"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"bid"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"ask"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.100000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.300000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"101"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"101")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.500000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"102"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"102")))),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"There is no ",Object(i.b)("inlineCode",{parentName:"p"},"ASKS")," at timestamp ",Object(i.b)("inlineCode",{parentName:"p"},"2019-10-17T00:00:00.100000Z"),". The ",Object(i.b)("inlineCode",{parentName:"p"},"ASOF JOIN"),"\nwill look for the value in the ",Object(i.b)("inlineCode",{parentName:"p"},"BIDS")," table that has the closest timestamp\ninferior or equal to the target timestamp."))),Object(i.b)("p",null,"In case tables do not have designated timestamp column, but data is in\nchronological order, timestamp columns can be specified at runtime:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT\n bids.ts timebid,\n bid,\n ask\nFROM (bids timestamp(ts)) ASOF JOIN (asks timestamp (ts))\n")),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},Object(i.b)("inlineCode",{parentName:"p"},"ASOF")," join does not check timestamp order, if data is not in chronological\norder join result is non-deterministic"))),Object(i.b)("p",null,"Above query assumes that there is only one instrument in ",Object(i.b)("inlineCode",{parentName:"p"},"BIDS")," and ",Object(i.b)("inlineCode",{parentName:"p"},"ASKS"),"\ntables and therefore does not use the optional ",Object(i.b)("inlineCode",{parentName:"p"},"ON")," clause."),Object(i.b)("p",null,"If both tables store data for multiple instruments ",Object(i.b)("inlineCode",{parentName:"p"},"ON")," clause will allow you to\nfind bids for asks with matching instrument value."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT * FROM asks ASOF JOIN bids ON (instrument);\n")),Object(i.b)("h2",{id:"splice-join"},"SPLICE JOIN"),Object(i.b)("h3",{id:"overview-4"},"Overview"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"SPLICE JOIN")," is a full ",Object(i.b)("inlineCode",{parentName:"p"},"ASOF JOIN"),". It will return all the records from both\ntables. For each record from left table splice join will find prevailing record\nfrom right table and for each record from right table - prevailing record from\nleft table."),Object(i.b)("h3",{id:"examples-2"},"Examples"),Object(i.b)("p",null,"Considering the following tables."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"ts"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"ask"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.000000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.200000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"101")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.400000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"102")))),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"ts"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"bid"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.100000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"101")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.300000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"102")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2019-10-17T00:00:00.500000Z"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"103")))),Object(i.b)("p",null,"This query:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT ts timebid, bid, ask\nFROM bids SPLICE JOIN asks\n")),Object(i.b)("p",null,"Will return the following results"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"RESULTS\n=================================================\nts,                          bid        ask\n-------------------------------------------------\n2019-10-17T00:00:00.000000Z, 100,      null\n2019-10-17T00:00:00.100000Z, 100,      101\n2019-10-17T00:00:00.200000Z, 101,      101\n2019-10-17T00:00:00.300000Z, 101,      102\n2019-10-17T00:00:00.400000Z, 102,      102\n2019-10-17T00:00:00.500000Z, 101,      103\n")),Object(i.b)("p",null,"Note that the above query does not use the optional ",Object(i.b)("inlineCode",{parentName:"p"},"ON")," clause. In case you\nneed additional filtering on the two tables, you can use the ",Object(i.b)("inlineCode",{parentName:"p"},"ON")," clause as\nfollows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT ts timebid, instrument bidInstrument, bid, ask\nFROM bids\nSPLICE JOIN\n    (\n    SELECT ts timesask, instrument askInstrument, ask ask\n    FROM asks\n    )\n    ON bidInstrument=askInstrument;\n")))}s.isMDXComponent=!0}}]);