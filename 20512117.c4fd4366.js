(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{94:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return m}));var n=a(2),b=a(6),l=(a(0),a(218)),r={title:"Aggregation functions",sidebar_label:"Aggregation",description:"Aggregation functions reference documentation."},c={unversionedId:"reference/function/aggregation",id:"reference/function/aggregation",isDocsHomePage:!1,title:"Aggregation functions",description:"Aggregation functions reference documentation.",source:"@site/docs/reference/function/aggregation.md",slug:"/reference/function/aggregation",permalink:"/docs/reference/function/aggregation",version:"current",sidebar_label:"Aggregation",sidebar:"docs",previous:{title:"Telemetry",permalink:"/docs/reference/configuration/telemetry"},next:{title:"Date and time functions",permalink:"/docs/reference/function/date-time"}},i=[{value:"sum",id:"sum",children:[{value:"Arguments",id:"arguments",children:[]},{value:"Description",id:"description",children:[]},{value:"Return value",id:"return-value",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Overflow",id:"overflow",children:[]}]},{value:"ksum",id:"ksum",children:[{value:"Arguments",id:"arguments-1",children:[]},{value:"Description",id:"description-1",children:[]},{value:"Return value",id:"return-value-1",children:[]},{value:"Examples",id:"examples-1",children:[]}]},{value:"nsum",id:"nsum",children:[{value:"Arguments",id:"arguments-2",children:[]},{value:"Description",id:"description-2",children:[]},{value:"Return value",id:"return-value-2",children:[]},{value:"Examples",id:"examples-2",children:[]}]},{value:"count",id:"count",children:[{value:"Arguments",id:"arguments-3",children:[]},{value:"Description",id:"description-3",children:[]},{value:"Return value",id:"return-value-3",children:[]},{value:"Examples",id:"examples-3",children:[]}]},{value:"avg",id:"avg",children:[{value:"Arguments",id:"arguments-4",children:[]},{value:"Description",id:"description-4",children:[]},{value:"Return value",id:"return-value-4",children:[]},{value:"Examples",id:"examples-4",children:[]}]},{value:"min",id:"min",children:[{value:"Arguments",id:"arguments-5",children:[]},{value:"Description",id:"description-5",children:[]},{value:"Return value",id:"return-value-5",children:[]},{value:"Examples",id:"examples-5",children:[]}]},{value:"max",id:"max",children:[{value:"Arguments",id:"arguments-6",children:[]},{value:"Description",id:"description-6",children:[]},{value:"Return value",id:"return-value-6",children:[]},{value:"Examples",id:"examples-6",children:[]}]}],u={rightToc:i};function m(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"sum"},"sum"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"sum(value)")," - adds values."),Object(l.b)("h3",{id:"arguments"},"Arguments"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"value")," is any numeric value.")),Object(l.b)("h3",{id:"description"},"Description"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"sum(value)")," adds values ignoring missing data (e.g ",Object(l.b)("inlineCode",{parentName:"p"},"null")," values)."),Object(l.b)("h3",{id:"return-value"},"Return value"),Object(l.b)("p",null,"Return value type is the same as the type of the argument."),Object(l.b)("h3",{id:"examples"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Sum all quantities in the transactions table"',title:'"Sum',all:!0,quantities:!0,in:!0,the:!0,transactions:!0,'table"':!0}),"SELECT sum(quantity) FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"sum"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100")))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Sum all quantities in the transactions table, aggregated by item"',title:'"Sum',all:!0,quantities:!0,in:!0,the:!0,transactions:!0,"table,":!0,aggregated:!0,by:!0,'item"':!0}),"SELECT item, sum(quantity) FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"item"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"count"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"apple"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"53")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"orange"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"47")))),Object(l.b)("h3",{id:"overflow"},"Overflow"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"sum")," does not perform overflow check. To avoid overflow, you can cast the\nargument to wider type."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Cast as long to avoid overflow"',title:'"Cast',as:!0,long:!0,to:!0,avoid:!0,'overflow"':!0}),"SELECT sum(cast(a AS LONG)) FROM table;\n")),Object(l.b)("h2",{id:"ksum"},"ksum"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"ksum(value)")," - adds values using Kahan algorithm."),Object(l.b)("h3",{id:"arguments-1"},"Arguments"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"value")," is any numeric value.")),Object(l.b)("h3",{id:"description-1"},"Description"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"ksum(value)")," adds values ignoring missing data (e.g ",Object(l.b)("inlineCode",{parentName:"p"},"null")," values). Values are\nadded using the"),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Kahan_summation_algorithm"}),"Kahan compensated sum algorithm"),".\nThis is only beneficial for floating-point values such as ",Object(l.b)("inlineCode",{parentName:"p"},"float")," or ",Object(l.b)("inlineCode",{parentName:"p"},"double"),"."),Object(l.b)("h3",{id:"return-value-1"},"Return value"),Object(l.b)("p",null,"Return value type is the same as the type of the argument."),Object(l.b)("h3",{id:"examples-1"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT ksum(a)\nFROM (SELECT rnd_double() a FROM long_sequence(100));\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"ksum"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"52.79143968514029")))),Object(l.b)("h2",{id:"nsum"},"nsum"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"nsum(value)")," - adds values using Neumaier algorithm."),Object(l.b)("h3",{id:"arguments-2"},"Arguments"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"value")," is any numeric value.")),Object(l.b)("h3",{id:"description-2"},"Description"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"nsum(value)")," adds values ignoring missing data (e.g ",Object(l.b)("inlineCode",{parentName:"p"},"null")," values). Values are\nadded using the"),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Kahan_summation_algorithm#Further_enhancements"}),"Neumaier sum algorithm"),".\nThis is only beneficial for floating-point values such as ",Object(l.b)("inlineCode",{parentName:"p"},"float")," or ",Object(l.b)("inlineCode",{parentName:"p"},"double"),"."),Object(l.b)("h3",{id:"return-value-2"},"Return value"),Object(l.b)("p",null,"Return value type is the same as the type of the argument."),Object(l.b)("h3",{id:"examples-2"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT nsum(a)\nFROM (SELECT rnd_double() a FROM long_sequence(100));\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"nsum"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"49.5442334742831")))),Object(l.b)("h2",{id:"count"},"count"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"count()")," or ",Object(l.b)("inlineCode",{parentName:"p"},"count(*)")," - counts rows."),Object(l.b)("h3",{id:"arguments-3"},"Arguments"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"count")," does not require arguments.")),Object(l.b)("h3",{id:"description-3"},"Description"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"count()")," counts rows, irrespective of underlying data."),Object(l.b)("h3",{id:"return-value-3"},"Return value"),Object(l.b)("p",null,"Return value type is ",Object(l.b)("inlineCode",{parentName:"p"},"long"),"."),Object(l.b)("h3",{id:"examples-3"},"Examples"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Count of rows in the transactions table.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT count() FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"count"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100")))),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Count of rows in the transactions table aggregated by ",Object(l.b)("inlineCode",{parentName:"li"},"payment_type")," value.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql"}),"SELECT payment_type, count() FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cash_or_card"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"count"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cash"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"25")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"card"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"70")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"null"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"5")))),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},Object(l.b)("inlineCode",{parentName:"p"},"null")," values are aggregated with ",Object(l.b)("inlineCode",{parentName:"p"},"count()"),"."))),Object(l.b)("h2",{id:"avg"},"avg"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"avg(value)")," calculates simple average of values"),Object(l.b)("h3",{id:"arguments-4"},"Arguments"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"value")," is any numeric value.")),Object(l.b)("h3",{id:"description-4"},"Description"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"avg(value)")," averages values ignoring missing data (e.g ",Object(l.b)("inlineCode",{parentName:"p"},"null")," values)."),Object(l.b)("h3",{id:"return-value-4"},"Return value"),Object(l.b)("p",null,"Return value type is ",Object(l.b)("inlineCode",{parentName:"p"},"double"),"."),Object(l.b)("h3",{id:"examples-4"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Average transaction amount"',title:'"Average',transaction:!0,'amount"':!0}),"SELECT avg(amount) FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"avg"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"22.4")))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Average transaction amount by payment_type"',title:'"Average',transaction:!0,amount:!0,by:!0,'payment_type"':!0}),"SELECT payment_type, avg(amount) FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cash_or_card"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"avg"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cash"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"22.1")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"card"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"27.4")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"null"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"18.02")))),Object(l.b)("h2",{id:"min"},"min"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"min(value)")," - finds the lowest value."),Object(l.b)("h3",{id:"arguments-5"},"Arguments"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"value")," is any numeric value")),Object(l.b)("h3",{id:"description-5"},"Description"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"min(value)")," finds the lowest value ignoring missing data (e.g ",Object(l.b)("inlineCode",{parentName:"p"},"null")," values)."),Object(l.b)("h3",{id:"return-value-5"},"Return value"),Object(l.b)("p",null,"Return value type is the same as the type of the argument."),Object(l.b)("h3",{id:"examples-5"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Lowest transaction amount"',title:'"Lowest',transaction:!0,'amount"':!0}),"SELECT min(amount) FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"min"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"12.5")))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Lowest transaction amount, by payment_type"',title:'"Lowest',transaction:!0,"amount,":!0,by:!0,'payment_type"':!0}),"SELECT payment_type, min(amount) FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cash_or_card"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"min"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cash"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"12.5")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"card"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"15.3")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"null"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"22.2")))),Object(l.b)("h2",{id:"max"},"max"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"max(value)")," - finds the highest value."),Object(l.b)("h3",{id:"arguments-6"},"Arguments"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"value")," is any numeric value")),Object(l.b)("h3",{id:"description-6"},"Description"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"max(value)")," finds the highest value ignoring missing data (e.g ",Object(l.b)("inlineCode",{parentName:"p"},"null")," values)."),Object(l.b)("h3",{id:"return-value-6"},"Return value"),Object(l.b)("p",null,"Return value type is the same as the type of the argument."),Object(l.b)("h3",{id:"examples-6"},"Examples"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Highest transaction amount"',title:'"Highest',transaction:!0,'amount"':!0}),"SELECT max(amount) FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"min"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"55.3")))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-questdb-sql",metastring:'title="Highest transaction amount by payment_type"',title:'"Highest',transaction:!0,amount:!0,by:!0,'payment_type"':!0}),"SELECT payment_type, max(amount) FROM transactions;\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"cash_or_card"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"amount"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cash"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"31.5")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"card"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"55.3")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"null"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"29.2")))))}m.isMDXComponent=!0}}]);