(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{144:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return p}));var n=a(2),i=a(6),r=(a(0),a(218)),l=a(225),o=a(226),c={title:"Embedded Java API",sidebar_label:"Java (embedded)",description:"Tutorial showing how to use the embedded version of QuestDB in a Java application."},b={unversionedId:"api/java",id:"api/java",isDocsHomePage:!1,title:"Embedded Java API",description:"Tutorial showing how to use the embedded version of QuestDB in a Java application.",source:"@site/docs/api/java.md",slug:"/api/java",permalink:"/docs/api/java",version:"current",sidebar_label:"Java (embedded)",sidebar:"docs",previous:{title:"InfluxDB line protocol",permalink:"/docs/api/influxdb-line-protocol"},next:{title:"REST API",permalink:"/docs/api/rest"}},s=[{value:"Writing data",id:"writing-data",children:[{value:"Detailed steps",id:"detailed-steps",children:[]}]},{value:"Executing queries",id:"executing-queries",children:[{value:"Detailed steps",id:"detailed-steps-1",children:[]}]},{value:"InfluxDB sender library",id:"influxdb-sender-library",children:[{value:"Get started",id:"get-started",children:[]},{value:"Full Example",id:"full-example",children:[]}]}],d={rightToc:s};function p(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"QuestDB is written in Java and can be used as any other Java library. Moreover,\nit is a single JAR with no additional dependencies."),Object(r.b)("p",null,"To include QuestDB in your project, use the latest Maven coordinates:"),Object(r.b)(l.a,{defaultValue:"maven",values:[{label:"Maven",value:"maven"},{label:"Gradle",value:"gradle"}],mdxType:"Tabs"},Object(r.b)(o.a,{value:"maven",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-xml"}),"<dependency>\n    <groupId>org.questdb</groupId>\n    <artifactId>questdb</artifactId>\n    <version>5.0.3</version>\n</dependency>\n"))),Object(r.b)(o.a,{value:"gradle",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"implementation 'org.questdb:questdb:5.0.3'\n")))),Object(r.b)("h2",{id:"writing-data"},"Writing data"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"TableWriter")," facilitates table writes. To successfully create an instance\nof ",Object(r.b)("inlineCode",{parentName:"p"},"TableWriter"),", the table must:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"already exist"),Object(r.b)("li",{parentName:"ul"},"have no other open writers against it as the ",Object(r.b)("inlineCode",{parentName:"li"},"TableWriter")," constructor will\nattempt to obtain an exclusive cross-process lock on the table.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example table writer"',title:'"Example',table:!0,'writer"':!0}),'final CairoConfiguration configuration = new DefaultCairoConfiguration("data_dir");\ntry (CairoEngine engine = new CairoEngine(configuration)) {\n    final SqlExecutionContextImpl ctx = new SqlExecutionContextImpl(engine, 1);\n    try (SqlCompiler compiler = new SqlCompiler(engine)) {\n\n        compiler.compile("create table abc (a int, b byte, c short, d long, e float, g double, h date, i symbol, j string, k boolean, ts timestamp) timestamp(ts)", ctx);\n\n        try (TableWriter writer = engine.getWriter(ctx.getCairoSecurityContext(), "abc")) {\n            for (int i = 0; i < 10; i++) {\n                TableWriter.Row row = writer.newRow(Os.currentTimeMicros());\n                row.putInt(0, 123);\n                row.putByte(1, (byte) 1111);\n                row.putShort(2, (short) 222);\n                row.putLong(3, 333);\n                row.putFloat(4, 4.44f);\n                row.putDouble(5, 5.55);\n                row.putDate(6, System.currentTimeMillis());\n                row.putSym(7, "xyz");\n                row.putStr(8, "abc");\n                row.putBool(9, true);\n                row.append();\n            }\n            writer.commit();\n        }\n    }\n}\n')),Object(r.b)("h3",{id:"detailed-steps"},"Detailed steps"),Object(r.b)("h4",{id:"configure-cairo-engine"},"Configure Cairo engine"),Object(r.b)("p",null,"CairoEngine is a resource manager for the embedded QuestDB. Its main function is\nto facilitate concurrent access to pools of ",Object(r.b)("inlineCode",{parentName:"p"},"TableReader")," and ",Object(r.b)("inlineCode",{parentName:"p"},"TableWriter"),"\ninstances."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="New CairoEngine instance"',title:'"New',CairoEngine:!0,'instance"':!0}),'final CairoConfiguration configuration = new DefaultCairoConfiguration("data_dir");\ntry (CairoEngine engine = new CairoEngine(configuration)) {\n')),Object(r.b)("p",null,"A typical application will need only one instance of ",Object(r.b)("inlineCode",{parentName:"p"},"CairoEngine"),". This\ninstance will start when application starts and shuts down when application\ncloses. You will need to close ",Object(r.b)("inlineCode",{parentName:"p"},"CairoEngine")," gracefully when the application\nstops."),Object(r.b)("p",null,"QuestDB provides a default configuration which only requires the\n",Object(r.b)("inlineCode",{parentName:"p"},"data directory")," to be specified. For a more advanced usage, the whole\n",Object(r.b)("inlineCode",{parentName:"p"},"CairoConfiguration")," interface can be overridden."),Object(r.b)("h4",{id:"create-an-instance-of-sqlexecutioncontext"},"Create an instance of SqlExecutionContext"),Object(r.b)("p",null,"Execution context is a conduit for passing SQL execution artefacts to the\nexecution site. This instance is not thread-safe and it must not be shared\nbetween threads."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example of execution context"',title:'"Example',of:!0,execution:!0,'context"':!0}),"final SqlExecutionContextImpl ctx = new SqlExecutionContextImpl(engine, 1);\n")),Object(r.b)("p",null,"The second argument is the number of threads that will be helping to execute SQL\nstatements. Unless you are building another QuestDB server, this value should\nalways be 1."),Object(r.b)("h4",{id:"new-sqlcompiler-instance-and-blank-table"},"New SqlCompiler instance and blank table"),Object(r.b)("p",null,"Before we start writing data using ",Object(r.b)("inlineCode",{parentName:"p"},"TableWriter"),", the target table has to exist.\nThere are several ways to create new table ; using ",Object(r.b)("inlineCode",{parentName:"p"},"SqlCompiler")," is the easiest."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example of creating new table"',title:'"Example',of:!0,creating:!0,new:!0,'table"':!0}),'try (SqlCompiler compiler = new SqlCompiler(engine)) {\n    compiler.compile("create table abc (a int, b byte, c short, d long, e float, g double, h date, i symbol, j string, k boolean, ts timestamp) timestamp(ts)", ctx);\n')),Object(r.b)("p",null,"As you will be able to see below, the table field types and indexes must match\nthe code that is populating the table."),Object(r.b)("h4",{id:"new-instance-of-tablewriter"},"New instance of TableWriter"),Object(r.b)("p",null,"We use engine to create instance of ",Object(r.b)("inlineCode",{parentName:"p"},"TableWriter"),". This will enable reusing this\n",Object(r.b)("inlineCode",{parentName:"p"},"TableWriter")," instance later, when we use the same method of creating table\nwriter again."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="New table writer instance"',title:'"New',table:!0,writer:!0,'instance"':!0}),'try (TableWriter writer = engine.getWriter(ctx.getCairoSecurityContext(), "abc")) {\n')),Object(r.b)("p",null,"The writer will hold exclusive lock on table ",Object(r.b)("inlineCode",{parentName:"p"},"abc")," until it is closed. This lock\nis both intra and inter-process. If you have two Java applications accessing the\nsame table only one will succeed at one time."),Object(r.b)("h4",{id:"create-a-new-row"},"Create a new row"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example of creating new table row with timestamp"',title:'"Example',of:!0,creating:!0,new:!0,table:!0,row:!0,with:!0,'timestamp"':!0}),"TableWriter.Row row = writer.newRow(Os.currentTimeMicros());\n")),Object(r.b)("p",null,"Although this operation semantically looks like a new object creation, the row\ninstance is actually being re-used under the hood. A Timestamp is necessary to\ndetermine a partition for the new row. Its value has to be either increment or\nstay the same as the last row. When the table is not partitioned and does not\nhave a designated timestamp column, timestamp value can be omitted."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example of creating new table row without timestamp"',title:'"Example',of:!0,creating:!0,new:!0,table:!0,row:!0,without:!0,'timestamp"':!0}),"TableWriter.Row row = writer.newRow();\n")),Object(r.b)("h4",{id:"populate-columns"},"Populate columns"),Object(r.b)("p",null,"There are put","*"," methods for every supported data type. Columns are updated by an\nindex as opposed to by name."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example of populating table column"',title:'"Example',of:!0,populating:!0,table:!0,'column"':!0}),"row.putLong(3, 333);\n")),Object(r.b)("p",null,"Column update order is not important and update can be sparse. All unset columns\nwill default to NULL values."),Object(r.b)("h4",{id:"append-row"},"Append row"),Object(r.b)("p",null,"Following method call:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example of appending a new row"',title:'"Example',of:!0,appending:!0,a:!0,new:!0,'row"':!0}),"row.append();\n")),Object(r.b)("p",null,"Appended rows are not visible to readers until they are committed. An unneeded\nrow can also be canceled if required."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example of cancelling half-populated row"',title:'"Example',of:!0,cancelling:!0,"half-populated":!0,'row"':!0}),"row.cancel();\n")),Object(r.b)("p",null,"A pending row is automatically cancelled when ",Object(r.b)("inlineCode",{parentName:"p"},"writer.newRow()")," is called.\nConsider the following scenario:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"TableWriter.Row row = writer.newRow(Os.currentTimeMicros());\nrow.putInt(0, 123);\nrow.putByte(1, (byte) 1111);\nrow.putShort(2, (short) 222);\nrow.putLong(3, 333);\nrow = writer.newRow(Os.currentTimeMicros());\n...\n")),Object(r.b)("p",null,"Second ",Object(r.b)("inlineCode",{parentName:"p"},"newRow()")," call would cancel all the updates to the row since the last\n",Object(r.b)("inlineCode",{parentName:"p"},"append()"),"."),Object(r.b)("h4",{id:"commit-changes"},"Commit changes"),Object(r.b)("p",null,"To make changes visible to readers, writer has to commit. ",Object(r.b)("inlineCode",{parentName:"p"},"writer.commit")," does\nthis job. Unlike traditional SQL databases, the size of the transaction does not\nmatter. You can commit anything between 1 and 1 trillion rows. We also spent\nconsiderable effort to ensure ",Object(r.b)("inlineCode",{parentName:"p"},"commit()")," is lightweight. You can drip one row at\na time in applications that require such behaviour."),Object(r.b)("h2",{id:"executing-queries"},"Executing queries"),Object(r.b)("p",null,"We provide a single API for executing all kinds of SQL queries. The example\nbelow focuses on ",Object(r.b)("inlineCode",{parentName:"p"},"SELECT")," and how to fetch data from a cursor."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Compiling SQL"',title:'"Compiling','SQL"':!0}),"final CairoConfiguration configuration = new DefaultCairoConfiguration(temp.getRoot().getAbsolutePath());\ntry (CairoEngine engine = new CairoEngine(configuration)) {\n    final SqlExecutionContextImpl ctx = new SqlExecutionContextImpl(engine, 1);\n    try (SqlCompiler compiler = new SqlCompiler(engine)) {\n        try (RecordCursorFactory factory = compiler.compile(\"abc\", ctx).getRecordCursorFactory()) {\n            try (RecordCursor cursor = factory.getCursor(ctx)) {\n                final Record record = cursor.getRecord();\n                while (cursor.hasNext()) {\n                    // access 'record' instance for field values\n                }\n            }\n        }\n    }\n}\n")),Object(r.b)("h3",{id:"detailed-steps-1"},"Detailed steps"),Object(r.b)("p",null,"The steps to setup CairoEngine, execution context and SqlCompiler are the same\nas those we explained in ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#writing-data"}),"writing data")," section. We will skip\nthem here and focus on fetching data."),Object(r.b)("h4",{id:"recordcursorfactory"},"RecordCursorFactory"),Object(r.b)("p",null,"You can think of ",Object(r.b)("inlineCode",{parentName:"p"},"RecordCursorFactory")," as PreparedStatement. This is the entity\nthat holds SQL execution plan with all of the execution artefacts. Factories are\ndesigned to be reused and we strongly encourage caching them. You also need to\nmake sure that you close factories explicitly when you no longer need them.\nFailing to do so can cause memory and/or other resources leak."),Object(r.b)("h4",{id:"recordcursor"},"RecordCursor"),Object(r.b)("p",null,"This instance allows iterating over the dataset produced by SQL. Cursors are\nrelatively short-lived and do not imply fetching all the data. Note that you\nhave to close a cursor as soon as enough data is fetched ; the closing process\ncan happen at any time."),Object(r.b)("p",null,"Cursors are not thread safe and cannot be shared between threads."),Object(r.b)("h4",{id:"record"},"Record"),Object(r.b)("p",null,"This is cursor's data access API. Record instance is obtained from the cursor\noutside of the fetch loop."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example of fetching data from cursor"',title:'"Example',of:!0,fetching:!0,data:!0,from:!0,'cursor"':!0}),"final Record record = cursor.getRecord();\nwhile (cursor.hasNext()) {\n    // access 'record' instance for field values\n}\n")),Object(r.b)("p",null,"Record does not hold the data. Instead, it is an API to pull data when data is\nneeded. Record instance remains the same while cursor goes over the data, making\ncaching of records pointless."),Object(r.b)("h2",{id:"influxdb-sender-library"},"InfluxDB sender library"),Object(r.b)("p",null,"QuestDB library provides fast and efficient way of sending line protocol\nmessages. Sender implementation entry point is\n",Object(r.b)("inlineCode",{parentName:"p"},"io.questdb.cutlass.line.udp.LineProtoSender"),", it is fully zero-GC and has\nlatency in a region of 200ns per message."),Object(r.b)("h3",{id:"get-started"},"Get started"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Step 1:")," Create an instance of ",Object(r.b)("inlineCode",{parentName:"li"},"LineProtoSender"),".")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Arguments"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"interfaceIPv4Address")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Network interface to use to send messages.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"sendToIPv4Address")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Destination IP address")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"bufferCapacity")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Send buffer capacity to batch messages. Do not configure this buffer over the MTU size")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ttl")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"UDP packet TTL. Set this number appropriate to how many VLANs your messages have to traverse before reaching the destination")))),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example"',title:'"Example"'}),'LineProtoSender sender = new LineProtoSender(0, Net.parseIPv4("232.1.2.3"), 9009, 110, 2);\n')),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Step 2:")," Create ",Object(r.b)("inlineCode",{parentName:"li"},"entries")," by building each entry's tagset and fieldset.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Syntax"',title:'"Syntax"'}),'sender.metric("table_name").tag("key","value").field("key", value).$(timestamp);\n')),Object(r.b)("p",null,"where"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Element"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Can be repeated"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"metric(tableName)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specify which table the data is to be written into"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"no")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},'tag("key","value")')),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Use to add a new key-value entry as metadata"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yes")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},'field("key","value")')),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Use to add a new key-value entry as reading"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yes")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"$(timestamp)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specify the timestamp for the reading"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"no")))),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"You can chain several tags and fields, e.g\n",Object(r.b)("inlineCode",{parentName:"p"},'tag("a","x").tag("b","y").tag("c","z")')," etc."))),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Example"',title:'"Example"'}),'sender.metric("readings").tag("city", "London").tag("by", "quest").field("temp", 3400).field("humid", 0.434).$(Os.currentTimeNanos());\n')),Object(r.b)("p",null,"Sender will send message as soon as send buffer is full. To send messages before\nbuffer fills up you can use ",Object(r.b)("inlineCode",{parentName:"p"},"sender.flush()")),Object(r.b)("h3",{id:"full-example"},"Full Example"),Object(r.b)("p",null,"This example sends multicast messages to ",Object(r.b)("inlineCode",{parentName:"p"},"232.1.2.3:9009"),". In this mode multiple\nQuestDB instances can receive the same message."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="Sending InfluxDB line protocol"',title:'"Sending',InfluxDB:!0,line:!0,'protocol"':!0}),'LineProtoSender sender = new LineProtoSender(0, Net.parseIPv4("232.1.2.3"), 9009, 1024, 2);\nsender.metric("readings").tag("city", "London").tag("by", "quest").field("temp", 3400).$(Os.currentTimeMicros());\nsender.metric("readings").tag("city", "London").tag("by", "quest").field("temp", 3400).$(Os.currentTimeMicros());\nsender.metric("readings").tag("city", "London").tag("by", "quest").field("temp", 3400).$(Os.currentTimeMicros());\nsender.flush();\n')))}p.isMDXComponent=!0}}]);