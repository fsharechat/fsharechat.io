(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{206:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),o=(n(0),n(218)),i={title:"How to use QuestDB with Docker",sidebar_label:"Docker",description:"Tutorial showing how to use QuestDB with Docker. This also covers how to import data as well as persistence."},s={unversionedId:"guide/docker",id:"guide/docker",isDocsHomePage:!1,title:"How to use QuestDB with Docker",description:"Tutorial showing how to use QuestDB with Docker. This also covers how to import data as well as persistence.",source:"@site/docs/guide/docker.md",slug:"/guide/docker",permalink:"/docs/guide/docker",version:"current",sidebar_label:"Docker",sidebar:"docs",previous:{title:"Indexes",permalink:"/docs/concept/indexes"},next:{title:"How to use QuestDB with Homebrew",permalink:"/docs/guide/homebrew"}},c=[{value:"Install Docker",id:"install-docker",children:[]},{value:"QuestDB image",id:"questdb-image",children:[{value:"<code>-p</code> parameter",id:"-p-parameter",children:[]}]},{value:"Container status",id:"container-status",children:[]},{value:"Importing data and sending queries",id:"importing-data-and-sending-queries",children:[]},{value:"Data persistence",id:"data-persistence",children:[{value:"Restart an existing container",id:"restart-an-existing-container",children:[]},{value:"Re-run <code>docker run</code>",id:"re-run-docker-run",children:[]}]}],l={rightToc:c};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Docker is great to get started in minutes with just a few commands. Follow this\nguide to set up and start QuestDB. By the end, you will be able to send and\nquery data using the REST API and/or Postgres wire protocol."),Object(o.b)("h2",{id:"install-docker"},"Install Docker"),Object(o.b)("p",null,"Before we start, you will need to install Docker. You can find guides for your\nplatform ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/get-docker/"}),"on the official documentation"),"."),Object(o.b)("h2",{id:"questdb-image"},"QuestDB image"),Object(o.b)("p",null,"With Docker installed, you will need to pull QuestDB's image and create a\ncontainer. You can do both in one command using ",Object(o.b)("inlineCode",{parentName:"p"},"docker run"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"docker run -p 9000:9000 -p 8812:8812 questdb/questdb\n")),Object(o.b)("h3",{id:"-p-parameter"},Object(o.b)("inlineCode",{parentName:"h3"},"-p")," parameter"),Object(o.b)("p",null,"This parameter will publish a port to the host, you can specify:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"-p 9000:9000")," for the REST API and the Web Console. The web console is\navailable on http://localhost:9000"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"-p 8812:8812")," for the Postgres wire protocol"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"-p 9009:9009")," InfluxDB line protocol")),Object(o.b)("h2",{id:"container-status"},"Container status"),Object(o.b)("p",null,"You can check the status of your container with ",Object(o.b)("strong",{parentName:"p"},"docker ps"),". It also lists the\nports we published:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"docker ps\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:'title="Result"',title:'"Result"'}),'CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES\ndd363939f261        questdb/questdb     "/app/bin/java -m io\u2026"   3 seconds ago       Up 2 seconds        8812/tcp, 9000/tcp   frosty_gauss\n')),Object(o.b)("h2",{id:"importing-data-and-sending-queries"},"Importing data and sending queries"),Object(o.b)("p",null,"\ud83c\udf89 Congratulations, you have a running QuestDB server. You can now start to\ninteract with it:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"If you published the port ",Object(o.b)("inlineCode",{parentName:"li"},"9000"),", you can follow our ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/guide/rest"}),"REST guide")),Object(o.b)("li",{parentName:"ul"},"If you published the port ",Object(o.b)("inlineCode",{parentName:"li"},"8812"),", follow our\n",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/guide/postgres-wire/"}),"Postgres wire guide"))),Object(o.b)("h2",{id:"data-persistence"},"Data persistence"),Object(o.b)("h3",{id:"restart-an-existing-container"},"Restart an existing container"),Object(o.b)("p",null,"When you stop the container, it will not be removed by Docker. This means that\nyou can restart it anytime and your data will be accessible:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"title=\"Start container from the  ID obtained with 'docker ps'\"",title:'"Start',container:!0,from:!0,the:!0,"":!0,ID:!0,obtained:!0,with:!0,"'docker":!0,"ps'\"":!0}),"docker start dd363939f261\n")),Object(o.b)("h3",{id:"re-run-docker-run"},"Re-run ",Object(o.b)("inlineCode",{parentName:"h3"},"docker run")),Object(o.b)("p",null,"If you re-run the command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"docker run -p 9000:9000 -p 8812:8812 questdb/questdb\n")),Object(o.b)("p",null,"A new container will be created for the QuestDB image. This means that the\ncontainer will be fresh, any data you may have created previously won't be\naccessible."))}d.isMDXComponent=!0}}]);